# tests/case_2.pcat


program <1:1-12:5>
  body <1:11-12:4>
    declaration list <1:11-3:21>
      variable declaration <2:9-2:28>
        identifier list <2:9-2:13>
          identifier <2:9-2:10> A
          identifier <2:12-2:13> B
        type annotation <2:14-2:20>
          id type <2:16-2:20>
            identifier <2:16-2:20> REAL
        number expression <2:24-2:27> 0.0
          real <2:24-2:27> 0.0
      variable declaration <3:5-3:21>
        identifier list <3:5-3:6>
          identifier <3:5-3:6> C
        type annotation <3:7-3:13>
          id type <3:9-3:13>
            identifier <3:9-3:13> REAL
        number expression <3:17-3:20> 0.0
          real <3:17-3:20> 0.0
    statement list <4:6-11:26>
      write statement <5:5-5:32>
        write parameter list <5:12-5:30>
          write expression <5:12-5:30> "ENTER TWO REALS:"
            string <5:12-5:30> "ENTER TWO REALS:"
      read statement <6:5-6:17>
        read parameter list <6:11-6:15>
          lvalue <6:11-6:12> A
          lvalue <6:14-6:15> B
      assign statement <7:5-7:14>
        lvalue <7:5-7:6> C
        number expression <7:10-7:13> 8.0
          real <7:10-7:13> 8.0
      write statement <8:5-8:43>
        write parameter list <8:12-8:41>
          write expression <8:12-8:16> "A="
            string <8:12-8:16> "A="
          write expression <8:18-8:19> A
            lvalue expression <8:18-8:19> A
              lvalue <8:18-8:19> A
          write expression <8:21-8:27> ", B="
            string <8:21-8:27> ", B="
          write expression <8:29-8:30> B
            lvalue expression <8:29-8:30> B
              lvalue <8:29-8:30> B
          write expression <8:32-8:38> ", C="
            string <8:32-8:38> ", C="
          write expression <8:40-8:41> C
            lvalue expression <8:40-8:41> C
              lvalue <8:40-8:41> C
      assign statement <9:5-9:23>
        lvalue <9:5-9:6> C
        binary expression <9:10-9:22> A - (-B) + C
          binary expression <9:10-9:18> A - (-B)
            lvalue expression <9:10-9:11> A
              lvalue <9:10-9:11> A
            operator <9:12-9:13> -
            parenthesis expression <9:14-9:18> (-B)
              unary expression <9:15-9:17> -B
                operator <9:15-9:16> -
                lvalue expression <9:16-9:17> B
                  lvalue <9:16-9:17> B
          operator <9:19-9:20> +
          lvalue expression <9:21-9:22> C
            lvalue <9:21-9:22> C
      assign statement <10:5-10:30>
        lvalue <10:5-10:6> C
        binary expression <10:10-10:29> C + A * (3 + 5 * 2)
          lvalue expression <10:10-10:11> C
            lvalue <10:10-10:11> C
          operator <10:12-10:13> +
          binary expression <10:14-10:29> A * (3 + 5 * 2)
            lvalue expression <10:14-10:15> A
              lvalue <10:14-10:15> A
            operator <10:16-10:17> *
            parenthesis expression <10:18-10:29> (3 + 5 * 2)
              binary expression <10:19-10:28> 3 + 5 * 2
                number expression <10:19-10:20> 3
                  integer <10:19-10:20> 3
                operator <10:21-10:22> +
                binary expression <10:23-10:28> 5 * 2
                  number expression <10:23-10:24> 5
                    integer <10:23-10:24> 5
                  operator <10:25-10:26> *
                  number expression <10:27-10:28> 2
                    integer <10:27-10:28> 2
      write statement <11:5-11:26>
        write parameter list <11:13-11:24>
          write expression <11:13-11:24> -C / (A + 1)
            binary expression <11:13-11:24> -C / (A + 1)
              unary expression <11:13-11:15> -C
                operator <11:13-11:14> -
                lvalue expression <11:14-11:15> C
                  lvalue <11:14-11:15> C
              operator <11:16-11:17> /
              parenthesis expression <11:17-11:24> (A + 1)
                binary expression <11:18-11:23> A + 1
                  lvalue expression <11:18-11:19> A
                    lvalue <11:18-11:19> A
                  operator <11:20-11:21> +
                  number expression <11:22-11:23> 1
                    integer <11:22-11:23> 1
